This is the fork of exclipy's fork of clang_complete with support for his clang_indexer.
I rebased against the latest changes from Rip-Rip's branch and fixed one minor bug in getCurrentUsr.

I also added a feature to navigate the source code with FuzzyFinder. I split feature into two: one will only navigate through classes, and another navigates through all the symbols. The reason for that is that in a reasonably big codebase (like the one I use) number of all the symbols might be very high, and fuzzy finder takes a while to prepare the popup (up to 4 seconds). With my use case number of classes was reasonably small for fuzzy finder to process it in subsecond (I would still prefer something more instanteneous, but FuzzyFinder API was the fastest way to achieve what I needed), and navigating to a class is way more common scenario than navigating to a method or a function.
Here's an example from my .vimrc, w will open fuzzy finder for classes, and W will open it for everything.

  nnoremap w :call NavigateCPP(1)<CR>
  nnoremap W :call NavigateCPP(0)<CR>

This fucntionality requires fuzzy finder:
http://www.vim.org/scripts/script.php?script_id=1984


Original README:

This plugin uses clang for accurately completing C and C++ code.

To build and install in one step, type:
$ make install

To build and install in two steps, type:
$ make
$ vim clang_complete.vmb -c 'so %' -c 'q'

Alternatively, you can also put the files in ~/.vim/

You need Vim 7.3 or higher, compiled with python support and ideally, with
the conceal feature.

See doc/clang_complete.txt for help and license.


This fork is intended for use with the CLIC project, which aims to enable a "smart grep"
through an entire project for a symbol:
https://github.com/exclipy/clang_indexer


